package gov.nih.nci.cbiit.scimgmt.gds.domain;
// Generated Mar 28, 2016 10:25:57 AM by Hibernate Tools 4.0.0

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * PlanAnswerSelection generated by hbm2java
 */
@Entity
@Table(name = "PLAN_ANSWER_SELECTIONS_T")
public class PlanAnswerSelection implements java.io.Serializable {

	private Long id;
	private PlanQuestionsAnswer planQuestionsAnswer;
	private List<Project> projects = new ArrayList();;
	private String createdBy;
	private String lastChangedBy;
	private String otherText;
	private Set<RepositoryStatus> repositoryStatuses = new HashSet(0);
	
	public PlanAnswerSelection() {
	}

	public PlanAnswerSelection(Long id, PlanQuestionsAnswer planQuestionsAnswer, String createdBy) {
		this.id = id;
		this.planQuestionsAnswer = planQuestionsAnswer;
		this.createdBy = createdBy;
	}

	public PlanAnswerSelection(Long id, PlanQuestionsAnswer planQuestionsAnswer,
			String createdBy, String lastChangedBy) {
		this.id = id;
		this.planQuestionsAnswer = planQuestionsAnswer;
		this.createdBy = createdBy;
		this.lastChangedBy = lastChangedBy;
	}

	public PlanAnswerSelection(PlanAnswerSelection newObject) {
		this.id = newObject.id;
		this.planQuestionsAnswer = newObject.planQuestionsAnswer;
		this.projects = newObject.projects;
		this.createdBy = newObject.createdBy;
		this.lastChangedBy = newObject.lastChangedBy;
	}

	@Id
	@SequenceGenerator(name="pas_seq_gen", sequenceName="PAS_SEQ", allocationSize=1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "pas_seq_gen")
	@Column(name = "ID", unique = true, nullable = false, precision = 10, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ANSWER_ID", nullable = false)
	public PlanQuestionsAnswer getPlanQuestionsAnswer() {
		return this.planQuestionsAnswer;
	}

	public void setPlanQuestionsAnswer(PlanQuestionsAnswer planQuestionsAnswer) {
		this.planQuestionsAnswer = planQuestionsAnswer;
	}

	@ManyToMany
	@JoinTable(name="project_plan_answers_mapping_t", joinColumns=@JoinColumn(name="answer_selection_id"), inverseJoinColumns=@JoinColumn(name="project_id"))
	public List<Project> getProjects() {
		return this.projects;
	}

	public void setProjects(List<Project> projects) {
		this.projects = projects;
	}

	public void addProject(Project project) {
		this.projects.add(project);
	}
	
	public void removeProject(Project project) {
		Iterator<Project> projects = this.getProjects().iterator();
		while(projects.hasNext()) {
			Project curProject = projects.next();
			if(curProject.getId().equals(project.getId())) {
				projects.remove();
				break;
			}
		}
	}
	
	@Column(name = "CREATED_BY", nullable = false, length = 120)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "LAST_CHANGED_BY", length = 120)
	public String getLastChangedBy() {
		return this.lastChangedBy;
	}

	public void setLastChangedBy(String lastChangedBy) {
		this.lastChangedBy = lastChangedBy;
	}

	@Column(name = "OTHER_TEXT", length = 800)
	public String getOtherText() {
		return this.otherText;
	}

	public void setOtherText(String otherText) {
		this.otherText = otherText;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "planAnswerSelectionTByRepositoryId", orphanRemoval=true)
	@Cascade({CascadeType.ALL})
	public Set<RepositoryStatus> getRepositoryStatuses() {
		return this.repositoryStatuses;
	}

	public void setRepositoryStatuses(Set<RepositoryStatus> repositoryStatuses) {
		this.repositoryStatuses = repositoryStatuses;
	}
}
